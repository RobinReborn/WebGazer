move eyefeats to utils (and any other duplicated ridgereg code)

can add another property to return from TFFaceMesh.prototype.getEyePatches, the boundaries of the eyes,
the places which are in the rectangle but not in the eye, then after image is resized we can calculate
which pixels to exclude

first find the points of the upper and lower eye, return them from getEyePatches (this could be pr for facemesh)
then calculate where these would be in the resized eye objects -
first iteration, just make a diamond with lines drawn from max and min x and y's.
 we  and exclude them from the ridge regression 
(can validate by coloring the pixels white and drawing it on the canvas) - can test performance afterwards

find out more about how to trace performance (https://calendar.perfplanet.com/2019/javascript-component-level-cpu-costs/)
and figure out optimal resize value to balance speed of execution and accuracy

figure out why it's taking so long to load
